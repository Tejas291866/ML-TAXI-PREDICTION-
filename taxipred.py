# -*- coding: utf-8 -*-
"""taxipred.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19gf8TjLYcF1_DYFwtpQqnBvHjolVI5b1
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
from sklearn.linear_model import LinearRegression
from geopy.distance import geodesic

data=pd.read_csv("train.csv")
print(data.head())

data1=pd.read_csv("test.csv")
print(data.head())

data.isnull().sum()

data1.isnull().sum()

data=data.dropna()
data.isnull().sum()

data.info()

data1.info()

print(data['store_and_fwd_flag'].value_counts())

data.drop('store_and_fwd_flag', axis=1, inplace=True)

if 'store_and_fwd_flag' in data1.columns:
    data1.drop('store_and_fwd_flag', axis=1, inplace=True)
else:
    print("Column 'store_and_fwd_flag' not found in the testing data.")

data.info()

data1.info()

pickup_coords = list(zip(data['pickup_latitude'], data['pickup_longitude']))
dropoff_coords = list(zip(data['dropoff_latitude'], data['dropoff_longitude']))

data['distance_km'] = [geodesic(pickup, dropoff).kilometers for pickup, dropoff in zip(pickup_coords, dropoff_coords)]

pickup_coords = list(zip(data1['pickup_latitude'], data1['pickup_longitude']))
dropoff_coords = list(zip(data1['dropoff_latitude'], data1['dropoff_longitude']))

data1['distance_km'] = [geodesic(pickup, dropoff).kilometers for pickup, dropoff in zip(pickup_coords, dropoff_coords)]

data3.info()

data1.info()

numerical_columns = ['pickup_longitude', 'pickup_latitude', 'dropoff_longitude', 'dropoff_latitude', 'trip_duration', 'distance_km']
data3[numerical_columns].plot(kind='box', vert=False, figsize=(12, 6))
plt.title("Box Plot for Numerical Features (Outliers)")
plt.xlabel("Values")
plt.show()

feature_cols = ['vendor_id', 'passenger_count', 'pickup_longitude', 'pickup_latitude', 'dropoff_longitude', 'dropoff_latitude', 'distance_km']
target_col = 'trip_duration'

# Drop rows with missing 'trip_duration' values in the training data
data3.dropna(subset=[target_col], inplace=True)

# Separate the features and target variable in training sets
X_train = data3[feature_cols]
y_train = data3[target_col]

# Create and train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the testing data
X_test = data1[feature_cols]
y_pred = model.predict(X_test)

print(y_pred)